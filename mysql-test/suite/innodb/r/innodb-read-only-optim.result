call mtr.add_suppression("prepared XA transaction");
create table t1 (a int, b int, primary key (a)) engine = innodb;
insert into t1 values (1,2),(2,3);
set session transaction_isolation = 'READ-COMMITTED';
begin;
select * from t1 where a = 1;
a	b
1	2
insert into t1 values (3,4);
commit;
set session transaction_isolation = 'REPEATABLE-READ';
begin;
select * from t1 where a = 3;
a	b
3	4
insert into t1 values (4,5);
commit;
set session transaction_isolation = 'SERIALIZABLE';
begin;
select * from t1 where a = 4;
a	b
4	5
insert into t1 values (5,6);
commit;
set session transaction_isolation = 'READ-COMMITTED';
select * from t1 where a = 5;
a	b
5	6
update t1 set b = b+1 where a = 5;
set session transaction_isolation = 'REPEATABLE-READ';
select * from t1 where a = 5;
a	b
5	7
update t1 set b = b+1 where a = 5;
set session transaction_isolation = 'SERIALIZABLE';
select * from t1 where a = 5;
a	b
5	8
update t1 set b = b+1 where a = 5;
set session transaction_isolation = 'READ-COMMITTED';
select * from t1 where a = 4;
a	b
4	5
select * from t1 where a = 5;
a	b
5	9
set session transaction_isolation = 'REPEATABLE-READ';
select * from t1 where a = 4;
a	b
4	5
select * from t1 where a = 5;
a	b
5	9
set session transaction_isolation = 'SERIALIZABLE';
select * from t1 where a = 4;
a	b
4	5
select * from t1 where a = 5;
a	b
5	9
set session transaction_isolation = 'READ-COMMITTED';
set session transaction_isolation = 'READ-COMMITTED';
begin;
select * from t1 where a = 5;
a	b
5	9
insert into t1 values (6,7);
begin;
select * from t1 where a = 5;
a	b
5	9
select * from t1 where a = 6;
a	b
commit;
select * from t1 where a = 6;
a	b
select * from t1 where a = 5;
a	b
5	9
commit;
set session transaction_isolation = 'REPEATABLE-READ';
set session transaction_isolation = 'REPEATABLE-READ';
begin;
select * from t1 where a = 5;
a	b
5	9
insert into t1 values (7,8);
begin;
select * from t1 where a = 5;
a	b
5	9
select * from t1 where a = 7;
a	b
commit;
select * from t1 where a = 7;
a	b
select * from t1 where a = 5;
a	b
5	9
commit;
set session transaction_isolation = 'READ-COMMITTED';
set session transaction_isolation = 'READ-COMMITTED';
begin;
update t1 set b=b+1 where a = 1;
update t1 set b=b+1 where a = 5;
begin;
update t1 set b=b+1 where a = 3;
update t1 set b=b+1 where a = 3;;
update t1 set b=b+1 where a = 5;
ERROR 40001: Deadlock found when trying to get lock; try restarting transaction
commit;
commit;
begin;
update t1 set b=b+1 where a = 5;
begin;
update t1 set b=b+1 where a = 1;
update t1 set b=b+1 where a = 3;
update t1 set b=b+1 where a = 3;;
update t1 set b=b+1 where a = 5;
ERROR 40001: Deadlock found when trying to get lock; try restarting transaction
commit;
commit;
handler t1 open;
handler t1 read first;
a	b
1	4
handler t1 read next;
a	b
2	3
handler t1 close;
create table t2 (a int) engine = innodb;
alter table t2 add column b int;
alter table t2 add primary key (a);
alter table t2 add column c int;
alter table t2 add key (c);
rename table t2 to t2_tmp;
rename table t2_tmp to t2;
alter table t2 discard tablespace;
drop table t2;
create temporary table tmp(a int) engine = innodb;
set session transaction_read_only = 1;
begin;
insert into tmp values (1);
insert into tmp values (2);
commit;
set session transaction_read_only = 0;
drop temporary table tmp;
CREATE TABLE fts_t1 (a VARCHAR(200), b TEXT, FULLTEXT (a,b)) ENGINE = InnoDB;
INSERT INTO fts_t1 VALUES
('MySQL has now support', 'for full-text search'),
('Full-text indexes', 'are called collections'),
('Only MyISAM tables','support collections'),
('Function MATCH ... AGAINST()','is used to do a search'),
('Full-text search in MySQL', 'implements vector space model');
begin;
select * from fts_t1 where MATCH(a,b) AGAINST ("collections");
a	b
Full-text indexes	are called collections
Only MyISAM tables	support collections
select * from fts_t1 where MATCH(a,b) AGAINST ("collections" WITH QUERY EXPANSION);
a	b
Only MyISAM tables	support collections
Full-text indexes	are called collections
MySQL has now support	for full-text search
Full-text search in MySQL	implements vector space model
commit;
begin;
select * from fts_t1 where MATCH(a,b) AGAINST ("collections");
a	b
Full-text indexes	are called collections
Only MyISAM tables	support collections
delete from fts_t1;
commit;
drop table fts_t1;
xa begin '123';
insert into t1 values (8,9);
xa end '123';
xa prepare '123';
xa commit '123';
begin;
update t1 set b=b+1 where a = 2;
update t1 set b=b+1 where a = 3;
update t1 set b=b+1 where a =4;
begin;
select * from t1 where a =3;
a	b
3	6
commit;
commit;
show variables like 'innodb_autoinc_lock_mode';
Variable_name	Value
innodb_autoinc_lock_mode	0
create table tt_autoinc(a int auto_increment primary key, b int);
insert into tt_autoinc values (NULL,1);
insert into tt_autoinc values (NULL,1);
begin;
select * from tt_autoinc order by a;
a	b
1	1
2	1
insert into tt_autoinc values (NULL,1);
delete from tt_autoinc;
commit;
drop table tt_autoinc;
create database sbs;
use sbs;
create table t1 (a int);
drop database sbs;
use test;
begin;
update t1 set b=b+1 where a = 5;
savepoint first_sp;
update t1 set b=b+1 where a = 6;
rollback to savepoint first_sp;
update t1 set b=b+1 where a = 6;
commit;
begin;
update t1 set b=b+1 where a = 5;
begin;
select * from t1 where a = 3;
a	b
3	7
select trx_state from information_schema.innodb_trx;
trx_state
RUNNING
RUNNING
commit;
commit;
set session transaction_isolation = 'REPEATABLE-READ';
start transaction with consistent snapshot;
select * from t1 where a = 3;
a	b
3	7
update t1 set b=b+1 where a = 3;
commit;
set session transaction_isolation = 'READ-COMMITTED';
create table sb_part(a int) engine = innodb partition by hash(a) partitions 5;
rename table sb_part to sb_part_tmp;
rename table sb_part_tmp to sb_part;
drop table sb_part;
show session variables like 'innodb_table_locks';
Variable_name	Value
innodb_table_locks	ON
set session innodb_table_locks = 1;
set autocommit = 0;
lock tables t1 write;
unlock tables;
set autocommit = 1;
xa begin '123';
update t1 set b=b+1 where a = 2;
xa end '123';
xa prepare '123';
# Crash right after flushing binary log
SET SESSION DEBUG="+d,crash_after_flush_binlog";
BEGIN;
update t1 set b=b+1 where a = 5;
COMMIT;
ERROR HY000: Lost connection to MySQL server during query
# Restart the master server
xa recover;
formatID	gtrid_length	bqual_length	data
1	3	0	123
xa commit '123';
drop table t1;
