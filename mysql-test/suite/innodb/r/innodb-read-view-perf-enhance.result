# Create table to test.
CREATE table t1 (c1 INT PRIMARY KEY, c2 INT, c3 INT, key(c2)) ENGINE=INNODB;
CREATE TABLE t2 (c1 INT, c2 INT, c3 INT) ENGINE=INNODB;
SET SESSION transaction_isolation = 'READ-COMMITTED';
SET SESSION transaction_isolation = 'READ-COMMITTED';
SET SESSION transaction_isolation = 'READ-COMMITTED';
SET SESSION transaction_isolation = 'READ-COMMITTED';
# Test transaction visibility
BEGIN;
INSERT INTO t1 VALUES (1,2,3);
INSERT INTO t1 VALUES (2,3,4);
INSERT INTO t1 VALUES (3,4,5);
BEGIN;
# Shouldn't see (2,3,4)
SELECT * FROM t1 WHERE c1 = 2;
c1	c2	c3
INSERT INTO t1 VALUES (4,5,6);
BEGIN;
# Shouldn't see (4,5,6) or (2,3,4)
SELECT * FROM t1 WHERE c1 = 4;
c1	c2	c3
SELECT * FROM t1 WHERE c1 = 2;
c1	c2	c3
INSERT INTO t1 VALUES (5,6,7);
BEGIN;
INSERT INTO t2 VALUES (1,2,3);
SELECT * FROM t2;
c1	c2	c3
1	2	3
BEGIN;
INSERT INTO t2 VALUES (2,3,4);
COMMIT;
# Can see (4,5,6) because con2 is commited
SELECT * FROM t1 WHERE c1 = 4;
c1	c2	c3
4	5	6
# Shouldn't see (5,6,7)
SELECT * FROM t1 WHERE c1 = 5;
c1	c2	c3
COMMIT;
# Can see (5,6,7) because con3 is commited
SELECT * FROM t1 WHERE c1 = 5;
c1	c2	c3
5	6	7
COMMIT;
START TRANSACTION READ ONLY;
INSERT INTO t1 VALUES (9,9,9);
ERROR 25006: Cannot execute statement in a READ ONLY transaction.
DELETE FROM t1;
ERROR 25006: Cannot execute statement in a READ ONLY transaction.
SELECT count(*) FROM t1;
count(*)
5
COMMIT;
COMMIT;
commit;
SELECT COUNT(*) FROM t1;
COUNT(*)
5
INSERT INTO t1 VALUES (9,9,9);
COMMIT;
BEGIN;
SELECT COUNT(*) FROM t1;
COUNT(*)
6
DELETE FROM t1;
# Test temporary table now
CREATE TEMPORARY TABLE tmp_a(c1 INT PRIMARY KEY, c2 INT, c3 INT, KEY(c2)) ENGINE=INNODB;
START TRANSACTION READ ONLY;
SELECT * FROM tmp_a;
c1	c2	c3
INSERT INTO tmp_a VALUES (1,2,3);
COMMIT;
START TRANSACTION READ ONLY;
INSERT INTO tmp_a VALUES (2,3,4);
SELECT * FROM tmp_a;
c1	c2	c3
1	2	3
2	3	4
COMMIT;
commit;
commit;
commit;
commit;
commit;
SET DEBUG = '+d,force_extend_descr';
BEGIN;
INSERT INTO t1 VALUES (9,9,9);
UPDATE t1 SET c2=c2+1 WHERE c1 = 2;
UPDATE t1 SET c2=c2+1 WHERE c1 = 2;
SELECT * FROM t1 WHERE c1 = 2;
c1	c2	c3
COMMIT;
CREATE PROCEDURE p1()
BEGIN
DECLARE c CURSOR FOR SELECT c1 FROM t1;
OPEN c;
CLOSE c;
END //
CALL p1();
SET DEBUG='';
BEGIN;
INSERT INTO t1 VALUES (12,13,14);
BEGIN;
INSERT INTO t1 VALUES (13,14,15);
UPDATE t1 SET c2=c2+1 WHERE c1 = 2;
BEGIN;
INSERT INTO t1 VALUES (14,15,16);
SELECT COUNT(*) FROM t1;
COUNT(*)
1
START TRANSACTION READ ONLY;
SELECT COUNT(*) FROM t1;
COUNT(*)
1
COMMIT;
BEGIN;
SELECT * FROM t1;
c1	c2	c3
9	9	9
COMMIT;
commit;
commit;
commit;
BEGIN;
INSERT INTO t2 VALUES (1,2,3);
INSERT INTO t2 VALUES (2,3,4);
UPDATE t2 SET c2=c2+1 WHERE c3 = 3;
COMMIT;
INSERT INTO t1 VALUES (1,2,3),(2,3,4);
SET DEBUG_SYNC = 'RESET';
SET DEBUG_SYNC= 'after_remove_serial_list_release_locks SIGNAL not_in_active_trx_list WAIT_FOR check_sig';
UPDATE t1 SET c3=c3+1 WHERE c1= 2;;
SET DEBUG_SYNC= 'NOW WAIT_FOR not_in_active_trx_list';
SET DEBUG_SYNC = 'after_remove_serial_list_release_locks SIGNAL check_sig';
BEGIN;
SELECT * FROM t1 WHERE c1 = 2;
c1	c2	c3
2	3	5
INSERT INTO t2 VALUES (9,9,9);
COMMIT;
SET SESSION transaction_isolation = 'REPEATABLE-READ';
BEGIN;
INSERT INTO t1 VALUES (32,33,34);
SET SESSION transaction_isolation = 'REPEATABLE-READ';
BEGIN;
INSERT INTO t1 VALUES (33,34,35);
SELECT * FROM t1 WHERE c1 = 12;
c1	c2	c3
12	13	14
SET SESSION transaction_isolation = 'REPEATABLE-READ';
BEGIN;
UPDATE t1 SET c3=c3+1 WHERE c1= 2;
SELECT * FROM t1 WHERE c1 = 2;
c1	c2	c3
2	3	5
COMMIT;
COMMIT;
COMMIT;
DROP PROCEDURE p1;
DROP TABLE t1;
DROP TABLE t2;
