USE mysql;
--disable_warnings
DROP TABLE IF EXISTS user_backup;
--enable_warnings
CREATE TABLE user_backup LIKE user;
INSERT INTO user_backup SELECT * FROM user;

SET GLOBAL rds_permission_control=ON;
SET GLOBAL rds_reserved_users='reserved_user1,reserved_user2,reserved_user3';

CREATE USER 'root1'@'%' IDENTIFIED BY '123456';
GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, RELOAD, PROCESS, REFERENCES, INDEX, ALTER, SHOW DATABASES, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, REPLICATION SLAVE, REPLICATION CLIENT, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, CREATE USER, EVENT, TRIGGER ON *.* TO 'root1'@'%' WITH GRANT OPTION;
CREATE USER 'reserved_user1'@'%' IDENTIFIED BY '123456';
GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, RELOAD, PROCESS, REFERENCES, INDEX, ALTER, SHOW DATABASES, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, REPLICATION SLAVE, REPLICATION CLIENT, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, CREATE USER, EVENT, TRIGGER ON *.* TO 'reserved_user1'@'%' WITH GRANT OPTION;
CREATE USER 'reserved_user2'@'%' IDENTIFIED BY '123456';
GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, RELOAD, PROCESS, REFERENCES, INDEX, ALTER, SHOW DATABASES, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, REPLICATION SLAVE, REPLICATION CLIENT, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, CREATE USER, EVENT, TRIGGER ON *.* TO 'reserved_user2'@'%' WITH GRANT OPTION;
CREATE USER 'reserved_user3'@'%' IDENTIFIED BY '123456';
GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, RELOAD, PROCESS, REFERENCES, INDEX, ALTER, SHOW DATABASES, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, REPLICATION SLAVE, REPLICATION CLIENT, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, CREATE USER, EVENT, TRIGGER ON *.* TO 'reserved_user3'@'%' WITH GRANT OPTION;
CREATE USER 'super'@'%' IDENTIFIED BY '123456';
GRANT ALL PRIVILEGES ON *.* TO 'super'@'%' WITH GRANT OPTION;

show global variables like 'rds%';

connect(conn1,localhost,root1,123456,mysql);
DROP TRIGGER IF EXISTS test_create_trigger;
delimiter $;
--error 1465
CREATE TRIGGER test_create_trigger 
AFTER INSERT ON mysql.user
FOR EACH ROW
BEGIN
    delete from mysql.user where user=new.user;
END$
delimiter ;$

connect(conn2,localhost,reserved_user1,123456,mysql);
DROP TRIGGER IF EXISTS test_create_trigger;
delimiter $;
CREATE TRIGGER test_create_trigger 
AFTER INSERT ON mysql.user
FOR EACH ROW
BEGIN
    delete from mysql.user where user=new.user;
END$
delimiter ;$

connect(conn3,localhost,super,123456,mysql);
DROP TRIGGER IF EXISTS test_create_trigger;
delimiter $;
CREATE TRIGGER test_create_trigger 
AFTER INSERT ON mysql.user
FOR EACH ROW
BEGIN
    delete from mysql.user where user=new.user;
END$
delimiter ;$


SET GLOBAL rds_permission_control=OFF;
--disconnect conn2
--disconnect conn3
connect(conn2,localhost,reserved_user1,123456,mysql);
delimiter $;
--error 1465
DROP TRIGGER IF EXISTS test_create_trigger;
CREATE TRIGGER test_create_trigger 
AFTER INSERT ON mysql.user
FOR EACH ROW
BEGIN
    delete from mysql.user where user=new.user;
END$
delimiter ;$

connect(conn3,localhost,super,123456,mysql);
delimiter $;
--error 1465
DROP TRIGGER IF EXISTS test_create_trigger;
CREATE TRIGGER test_create_trigger 
AFTER INSERT ON mysql.user
FOR EACH ROW
BEGIN
    delete from mysql.user where user=new.user;
END$
delimiter ;$

SET GLOBAL rds_permission_control=ON;
SET GLOBAL rds_reserved_users='';

connection default;
--disable_warnings
DROP USER reserved_user1,reserved_user2,reserved_user3,root1,super;
DELETE FROM user;
INSERT INTO user SELECT * FROM user_backup;
DROP TABLE user_backup;
--enable_warnings

