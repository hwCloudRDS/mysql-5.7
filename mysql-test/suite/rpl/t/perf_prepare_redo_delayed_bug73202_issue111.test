--source include/have_innodb.inc
--source include/have_debug.inc
--source include/not_embedded.inc
--disable_warnings
--source include/master-slave.inc
--enable_warnings

--disable_query_log
call mtr.add_suppression("Unsafe statement written to the binary log");
--enable_query_log
connection master;

connect(con1,localhost,root,,);
connect(con2,localhost,root,,);

connection con1;
# Create table for the test.
CREATE TABLE t1 (a INT AUTO_INCREMENT PRIMARY KEY, b INT) ENGINE=INNODB;

#Set innodb_flush_log_at_trx_commit to non-zero
SET GLOBAL innodb_flush_log_at_trx_commit = 1;

# For a simple workload
INSERT INTO t1(b) VALUES(1),(2),(3);

# If innodb_flush_log_at_trx_commit is 0 or XA PREPARE, LSN is not stored in THD.
SET GLOBAL innodb_flush_log_at_trx_commit= 0;
UPDATE t1 SET b=b+1;
SET GLOBAL innodb_flush_log_at_trx_commit=1;
# Test XA transaction

XA START '123';
--disable_warnings
INSERT INTO t1(b) VALUES(4);
XA END '123';
XA PREPARE '123';
XA COMMIT '123';


# Two threads in one group at Stage-0 (engine log flushing) of binlog group commit.
#SET GLOBAL combine_engine_log_flush_threshold=1000; # Ensure we go into S0 processing
SET DEBUG_SYNC="RESET";
SET DEBUG_SYNC="waiting_in_the_middle_of_flush_engine_stage SIGNAL leader_ready WAIT_FOR follower_ready";
SET DEBUG_SYNC="process_flush_engine_log_stage_as_leader SIGNAL self_flush_englog WAIT_FOR self_flush_englog";
send UPDATE t1 SET b=b+1 WHERE a=1;

connection con2;
SET DEBUG_SYNC= "RESET";
SET DEBUG_SYNC= "now WAIT_FOR leader_ready";
SET DEBUG_SYNC= "wait_as_follower SIGNAL follower_ready";
send INSERT INTO t1(b) VALUES (8);

connection con1;
reap;

connection con2;
reap;

connection master;
FLUSH LOGS;
sync_slave_with_master;

connection slave;
SELECT * FROM t1 ORDER BY a;

connection master;
SELECT * FROM t1 ORDER BY a;

#cleanup
DROP TABLE t1;

--source include/rpl_end.inc
