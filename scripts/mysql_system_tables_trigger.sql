
REPLACE INTO mysql.user VALUES ('localhost','rdsAdmin','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','','','','',0,0,0,0,'mysql_native_password','','Y',now(),NULL,'N');

FLUSH PRIVILEGES;

SET NAMES utf8;

USE mysql;

drop trigger if exists block_user_delete;

create definer='rdsAdmin'@'localhost' trigger block_user_delete before delete on user for each row BEGIN DECLARE format_text varchar(255); DECLARE message varchar(255); DECLARE is_reserved_user int; DECLARE permission_control varchar(255); set format_text = concat('%,',old.User,',%'); set message = concat('CANNOT DROP ',old.User,' USER'); select count(*) into is_reserved_user from performance_schema.global_variables where VARIABLE_NAME = 'RDS_RESERVED_USERS' and concat(',',VARIABLE_VALUE,',') like format_text and format_text != '%,,%' and locate(',',old.User)=0; select VARIABLE_VALUE into permission_control from performance_schema.global_variables where VARIABLE_NAME = 'RDS_PERMISSION_CONTROL'; if permission_control = 'ON' then if is_reserved_user != 0 then SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = message; end if; end if; END;

drop trigger if exists block_user_update;

create definer='rdsAdmin'@'localhost'  trigger block_user_update before update on user for each row BEGIN DECLARE format_text varchar(255); DECLARE message varchar(255); DECLARE is_reserved_user int; DECLARE permission_control varchar(255); set format_text = concat('%,',old.User,',%'); set message = concat('CANNOT UPDATE ',old.User,' USER'); select count(*) into is_reserved_user from performance_schema.global_variables where VARIABLE_NAME = 'RDS_RESERVED_USERS' and concat(',',VARIABLE_VALUE,',') like format_text and format_text != '%,,%' and locate(',',old.User)=0; select VARIABLE_VALUE into permission_control from performance_schema.global_variables where VARIABLE_NAME = 'RDS_PERMISSION_CONTROL'; if permission_control = 'ON' then if is_reserved_user != 0 then SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = message; end if; if old.super_priv = 'N' and new.super_priv = 'Y' then SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'SUPER PRIVILEGE CANNOT BE GRANTED';  elseif old.shutdown_priv = 'N' and new.shutdown_priv = 'Y' then SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'SHUTDOWN PRIVILEGE CANNOT BE GRANTED'; elseif old.file_priv = 'N' and new.file_priv = 'Y' then SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'FILE PRIVILEGE CANNOT BE GRANTED'; elseif old.create_tablespace_priv = 'N' and new.create_tablespace_priv = 'Y' then SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'CREATE TABLESPACE PRIVILEGE CANNOT BE GRANTED'; end if; end if; set format_text = concat('%,',new.User,',%'); set message = concat('CANNOT UPDATE ',old.User,' USER TO RESERVED USER'); select count(*) into is_reserved_user from performance_schema.global_variables where VARIABLE_NAME = 'RDS_RESERVED_USERS' and concat(',',VARIABLE_VALUE,',') like format_text and format_text != '%,,%' and locate(',',new.User)=0;if permission_control = 'ON' then if is_reserved_user != 0 then SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = message; end if;end if;if is_reserved_user = 0 then if new.authentication_string = "" or new.authentication_string is null then     SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'CANNOT UPDATE USER WITH NULL PASSWORD'; end if; end if; END;

drop trigger if exists block_user_insert;

create definer='rdsAdmin'@'localhost' trigger block_user_insert before insert on user for each row BEGIN DECLARE format_text varchar(255); DECLARE message varchar(255); DECLARE is_reserved_user int; DECLARE permission_control varchar(255); set format_text = concat('%,',new.User,',%'); set message = concat('CANNOT CREATE ',new.User,' USER');select count(*) into is_reserved_user from performance_schema.global_variables where VARIABLE_NAME = 'RDS_RESERVED_USERS' and concat(',',VARIABLE_VALUE,',') like format_text and format_text != '%,,%'  and locate(',',new.User)=0; select VARIABLE_VALUE into permission_control from performance_schema.global_variables where VARIABLE_NAME = 'RDS_PERMISSION_CONTROL'; if permission_control = 'ON' then if is_reserved_user != 0 then SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = message; end if; if new.super_priv = 'Y' then SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'SUPER PRIVILEGE CANNOT BE GRANTED OR MAINTAINED'; elseif new.shutdown_priv = 'Y' then SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'SHUTDOWN PRIVILEGE CANNOT BE GRANTED OR MAINTAINED'; elseif new.file_priv = 'Y' then SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'FILE PRIVILEGE CANNOT BE GRANTED OR MAINTAINED'; elseif new.create_tablespace_priv = 'Y' then SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'CREATE TABLESPACE PRIVILEGE CANNOT BE GRANTED OR MAINTAINED'; end if; end if; if is_reserved_user = 0 then if new.authentication_string = "" or new.authentication_string is null then SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'CANNOT CREATE USER WITH NULL PASSWORD'; end if; end if; END;

drop trigger if exists block_proc_delete;

create definer='rdsAdmin'@'localhost' trigger block_proc_delete before delete on proc for each row BEGIN DECLARE name_length int; DECLARE user_name varchar(255); DECLARE format_text varchar(255); DECLARE message varchar(255); DECLARE is_reserved_user int; DECLARE permission_control varchar(255); set name_length = case when LOCATE('@',old.definer) != 0 then LOCATE('@',old.definer)-1 else LENGTH(old.definer) end; set user_name = LEFT(old.definer,name_length); set format_text = concat('%,',user_name,',%'); set message = concat('CANNOT DROP ',user_name,' OBJECT'); select count(*) into is_reserved_user from performance_schema.global_variables where VARIABLE_NAME = 'RDS_RESERVED_USERS' and concat(',',VARIABLE_VALUE,',') like format_text and format_text != '%,,%' and locate(',',user_name)=0; select VARIABLE_VALUE into permission_control from performance_schema.global_variables where VARIABLE_NAME = 'RDS_PERMISSION_CONTROL'; if permission_control = 'ON' then if is_reserved_user != 0 then SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = message; end if; end if; END;

drop trigger if exists block_proc_update;

create definer='rdsAdmin'@'localhost' trigger block_proc_update before update on proc for each row BEGIN DECLARE name_length int; DECLARE user_name varchar(255); DECLARE format_text varchar(255); DECLARE message varchar(255); DECLARE is_reserved_user int; DECLARE permission_control varchar(255); set name_length = case when LOCATE('@',old.definer) != 0 then LOCATE('@',old.definer)-1 else LENGTH(old.definer) end; set user_name = LEFT(old.definer,name_length); set format_text = concat('%,',user_name,',%'); set message = concat('CANNOT MODIFY ',user_name,' OBJECT');select count(*) into is_reserved_user from performance_schema.global_variables where VARIABLE_NAME = 'RDS_RESERVED_USERS' and concat(',',VARIABLE_VALUE,',') like format_text and format_text != '%,,%' and locate(',',user_name)=0; select VARIABLE_VALUE into permission_control from performance_schema.global_variables where VARIABLE_NAME = 'RDS_PERMISSION_CONTROL'; if permission_control = 'ON' then if is_reserved_user != 0 then SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = message; end if; end if; set name_length = case when LOCATE('@',new.definer) != 0 then LOCATE('@',new.definer)-1 else LENGTH(new.definer) end; set user_name = LEFT(new.definer,name_length); set format_text = concat('%,',user_name,',%'); set message = concat('CANNOT MODIFY ',user_name,' OBJECT'); select count(*) into is_reserved_user from performance_schema.global_variables where VARIABLE_NAME = 'RDS_RESERVED_USERS' and concat(',',VARIABLE_VALUE,',') like format_text and format_text != '%,,%' and locate(',',user_name)=0; select VARIABLE_VALUE into permission_control from performance_schema.global_variables where VARIABLE_NAME = 'RDS_PERMISSION_CONTROL';if permission_control = 'ON' then if is_reserved_user != 0 then SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = message;  end if; end if; END;

drop trigger if exists block_proc_insert;

create definer='rdsAdmin'@'localhost' trigger block_proc_insert before insert on proc for each row BEGIN DECLARE name_length int; DECLARE user_name varchar(255); DECLARE format_text varchar(255); DECLARE message varchar(255); DECLARE is_reserved_user int; DECLARE permission_control varchar(255); set name_length = case when LOCATE('@',new.definer) != 0 then LOCATE('@',new.definer)-1 else LENGTH(new.definer) end; set user_name = LEFT(new.definer,name_length); set format_text = concat('%,',user_name,',%'); set message = concat('CANNOT CREATE ',user_name,' OBJECT'); select count(*) into is_reserved_user from performance_schema.global_variables where VARIABLE_NAME = 'RDS_RESERVED_USERS' and concat(',',VARIABLE_VALUE,',') like format_text and format_text != '%,,%' and locate(',',user_name)=0; select VARIABLE_VALUE into permission_control from performance_schema.global_variables where VARIABLE_NAME = 'RDS_PERMISSION_CONTROL'; if permission_control = 'ON' then if is_reserved_user != 0 then SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = message; end if; end if; END;

drop trigger if exists block_event_delete;

create definer='rdsAdmin'@'localhost' trigger block_event_delete before delete on event for each row BEGIN DECLARE name_length int; DECLARE user_name varchar(255); DECLARE format_text varchar(255); DECLARE message varchar(255); DECLARE is_reserved_user int; DECLARE permission_control varchar(255); set name_length = case when LOCATE('@',old.definer) != 0 then LOCATE('@',old.definer)-1 else LENGTH(old.definer) end; set user_name = LEFT(old.definer,name_length); set format_text = concat('%,',user_name,',%'); set message = concat('CANNOT DROP ',user_name,' OBJECT'); select count(*) into is_reserved_user from performance_schema.global_variables where VARIABLE_NAME = 'RDS_RESERVED_USERS' and concat(',',VARIABLE_VALUE,',') like format_text and format_text != '%,,%' and locate(',',user_name)=0; select VARIABLE_VALUE into permission_control from performance_schema.global_variables where VARIABLE_NAME = 'RDS_PERMISSION_CONTROL'; if permission_control = 'ON' then if is_reserved_user != 0 then SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = message; end if; end if; END;

drop trigger if exists block_event_update;

create definer='rdsAdmin'@'localhost' trigger block_event_update before update on event for each row BEGIN DECLARE name_length int; DECLARE user_name varchar(255); DECLARE format_text varchar(255); DECLARE message varchar(255); DECLARE is_reserved_user int; DECLARE permission_control varchar(255); set name_length = case when LOCATE('@',old.definer) != 0 then LOCATE('@',old.definer)-1 else LENGTH(old.definer) end; set user_name = LEFT(old.definer,name_length); set format_text = concat('%,',user_name,',%');set message = concat('CANNOT MODIFY ',user_name,' OBJECT'); select count(*) into is_reserved_user from performance_schema.global_variables where VARIABLE_NAME = 'RDS_RESERVED_USERS' and concat(',',VARIABLE_VALUE,',') like format_text and format_text != '%,,%' and locate(',',user_name)=0; select VARIABLE_VALUE into permission_control from performance_schema.global_variables where VARIABLE_NAME = 'RDS_PERMISSION_CONTROL'; if permission_control = 'ON' then if is_reserved_user != 0 then SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = message; end if; end if; set name_length = case when LOCATE('@',new.definer) != 0 then LOCATE('@',new.definer)-1 else LENGTH(new.definer) end; set user_name = LEFT(new.definer,name_length); set format_text = concat('%,',user_name,',%'); set message = concat('CANNOT MODIFY ',user_name,' OBJECT'); select count(*) into is_reserved_user from performance_schema.global_variables where VARIABLE_NAME = 'RDS_RESERVED_USERS' and concat(',',VARIABLE_VALUE,',') like format_text and format_text != '%,,%' and locate(',',user_name)=0; select VARIABLE_VALUE into permission_control from performance_schema.global_variables where VARIABLE_NAME = 'RDS_PERMISSION_CONTROL'; if permission_control = 'ON' then if is_reserved_user != 0 then SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = message;  end if; end if; END;

drop trigger if exists block_event_insert;

create definer='rdsAdmin'@'localhost' trigger block_event_insert before insert on event for each row BEGIN DECLARE name_length int; DECLARE user_name varchar(255); DECLARE format_text varchar(255); DECLARE message varchar(255); DECLARE is_reserved_user int; DECLARE permission_control varchar(255); set name_length = case when LOCATE('@',new.definer) != 0 then LOCATE('@',new.definer)-1 else LENGTH(new.definer) end; set user_name = LEFT(new.definer,name_length); set format_text = concat('%,',user_name,',%'); set message = concat('CANNOT CREATE ',user_name,' OBJECT'); select count(*) into is_reserved_user from performance_schema.global_variables where VARIABLE_NAME = 'RDS_RESERVED_USERS' and concat(',',VARIABLE_VALUE,',') like format_text and format_text != '%,,%' and locate(',',user_name)=0; select VARIABLE_VALUE into permission_control from performance_schema.global_variables where VARIABLE_NAME = 'RDS_PERMISSION_CONTROL'; if permission_control = 'ON' then if is_reserved_user != 0 then SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = message; end if; end if; END;
